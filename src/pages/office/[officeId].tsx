import { Collapse, ScrollBar, WebsiteList } from "@/components";
import { prisma } from "@/server/db";
import { type CardProps } from "@/types/props";
import { type Office } from "@prisma/client";
import { type GetStaticPaths, type GetStaticProps, type NextPage } from "next";
import Head from "next/head";

type StaticProps = {
  websites: CardProps[];
  offices: Office[];
  officeId: string;
};

const Office: NextPage<StaticProps> = (props) => {
  return (
    <>
      <Head>
        <title>Web Archive</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-12 font-serif">
        <h1 className="text-5xl font-black">國立陽明交通大學網站典藏庫</h1>
        <h1 className="mb-10 py-3 px-4 text-xl">
          National Yang Ming Chiao Tung University Web Archiving System
        </h1>
        <div className="flex max-w-full gap-3">
          <Collapse />
          <div className="min-w-0 flex-1">
            <ScrollBar offices={props.offices} activeId={props.officeId} />
            <WebsiteList websites={props.websites} />
          </div>
          <div className="px-10">
            <Collapse />
          </div>
        </div>
      </main>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  const officeList = await prisma.office.findMany();
  // console.log(officeList);
  return {
    paths: officeList.map((office) => {
      return {
        params: { officeId: office.id },
      };
    }),
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps<StaticProps> = async (context) => {
  const officeId = context.params?.officeId as string;
  const websites = await prisma.website.findMany({
    where: {
      officeId,
    },
    select: {
      name: true,
      url: true,
      updatedAt: true,
      viewCount: true,
    },
  });

  const offices = await prisma.office.findMany({
    where: {
      department: {
        category: {
          name: "交大相關",
        },
        name: "行政單位",
      },
    },
  });

  return {
    // Passed to the page component as props
    props: {
      websites: websites.map((web) => {
        return { ...web, updatedAt: web.updatedAt.toISOString() };
      }),
      offices,
      officeId,
    },
    revalidate: 1000,
  };
};

export default Office;
